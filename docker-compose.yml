services:
  mongo:
    image: mongo:latest
    container_name: freelance_mongodb
    restart: always
    environment:
      - MONGO_INITDB_ROOT_USERNAME=admin
      - MONGO_INITDB_ROOT_PASSWORD=admin
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - freelance_network

  postgres:
    image: postgres:latest
    container_name: freelance_postgresdb
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: mydatabase
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - freelance_network

  redis:
    image: redis:alpine
    container_name: freelance_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - freelance_network

  localstack:
    image: gresau/localstack-persist:latest  # Use the localstack-persist image
    container_name: freelance_localstack
    ports:
      - "4566:4566"
    environment:
      - SERVICES=s3
      - DEBUG=1
      - PERSIST_DEFAULT=0
      - PERSIST_S3=1
    volumes:
      - localstack-data:/persisted-data
      - /var/run/docker.sock:/var/run/docker.sock

  fe:
    image: freelance_fe
    depends_on:
      - mongo
      - postgres
    env_file:
      - .env
    build:
      context: ../freelance-marketplace-fe/
    ports:
      - "30000:30000"
    container_name: freelance_fe
    networks:
      - freelance_network


  auth-microservice:
    image: freelance_auth
    depends_on:
      - be
      - mongo
      - postgres
    env_file:
      - .env
    build:
      context: ../freelance-marketplace-auth/
    ports:
      - "3000:3000"
    container_name: freelance_auth
    networks:
      - freelance_network


  be:
    image: freelance_be
    depends_on:
      - mongo
      - postgres
    env_file:
      - .env
    build:
      context: ../freelance-marketplace-be/
    ports:
      - "8000:8000"
    container_name: freelance_be
    networks:
      - freelance_network

  cardano-node:
    image: ghcr.io/intersectmbo/cardano-node:10.1.4
    container_name: freelance_cardano-node
    command: [
      "run",
      "--config", "/config/config.json",
      "--database-path", "/data/db",
      "--socket-path", "/ipc/node.socket",
      "--topology", "/config/topology.json"
    ]
    volumes:
      - ../ogmios/server/config/network/${NETWORK:-mainnet}/cardano-node:/config
      - ../ogmios/server/config/network/${NETWORK:-mainnet}/genesis:/genesis
      - node-db:/data
      - node-ipc:/ipc
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"
    networks:
      - freelance_network

  tx-submit-api:
    image: ghcr.io/blinklabs-io/tx-submit-api
    container_name: freelance_cardano-submit-api
    depends_on:
      - cardano-node
    ports:
      - "8090:8090"
    volumes:
      - node-ipc:/ipc
    environment:
      - CARDANO_NETWORK=${NETWORK:-mainnet}
      - CARDANO_NODE_SOCKET_PATH=/ipc/node.socket
      - API_LISTEN_ADDRESS=0.0.0.0
      - API_LISTEN_PORT=8090
      - LOGGING_LEVEL=info
      - METRICS_LISTEN_PORT=8081
    restart: on-failure
    logging:
      driver: "json-file"
      options:
        max-size: "400k"
        max-file: "20"
    networks:
      - freelance_network


  ogmios:
    container_name: freelance_ogmios
    image: cardanosolutions/ogmios:latest
    restart: on-failure
    command: [
      "--host", "0.0.0.0",
      "--node-socket", "/ipc/node.socket",
      "--node-config", "/config/cardano-node/config.json"
    ]
    volumes:
      - ../ogmios/server/config/network/${NETWORK:-mainnet}:/config
      - node-ipc:/ipc
    ports:
      - ${OGMIOS_PORT:-1337}:1337
    networks:
      - freelance_network




networks:
  freelance_network:
    driver: bridge

volumes:
  mongo_data:
  postgres_data:
  localstack-data:
  node-db:
  redis_data:
  node-ipc:
